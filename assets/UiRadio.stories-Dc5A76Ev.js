import{j as r}from"./jsx-runtime-D_zvdyIk.js";import{R as x}from"./iframe-BwznxUV6.js";import{c as u}from"./index-CuoXRDjT.js";import{E as a}from"./align-CojEiJiX.js";const j="_UiRadio__custom_wei69_1",C="_UiRadio__dot_wei69_4",m={UiRadio__custom:j,UiRadio__dot:C},T={[a.START]:"justify-start",[a.END]:"justify-end",[a.CENTER]:"justify-center",[a.BETWEEN]:"justify-between",[a.AROUND]:"justify-around",[a.EVENLY]:"justify-evenly"},s=({id:e,name:t,value:n,invertOrder:o=!1,justify:d=a.START,disabled:l=!1,onChange:c,checked:v=!1,children:p,className:_,tabIndex:y})=>{const R=b=>{!l&&c&&c(b.target.value)};return r.jsxs("label",{className:u("UiRadio","group","grid","grid-flow-col","cursor-pointer",T[d],{"pointer-events-none":l,"items-center gap-xxs":p}),children:[r.jsx("input",{id:e||`${t}-${n}`,name:t.toString(),type:"radio",value:n,disabled:l,checked:v,onChange:R,className:"peer absolute appearance-none",tabIndex:y}),r.jsx("span",{className:u(m.UiRadio__custom,o&&"order-last","relative","block","size-md","rounded-full","border","border-secondary-alt","bg-white","group-hover:border-secondary-alt-700","group-focus:border-secondary-alt-700","peer-checked:border-2","peer-checked:border-primary","hover:peer-checked:border-primary-600","active:peer-checked:border-primary-800","peer-focus:shadow-border-primary","peer-disabled:border-secondary-alt-400","peer-disabled:bg-secondary-alt-200",_),children:r.jsx("span",{className:u(m.UiRadio__dot,"absolute","left-2/4","top-2/4","block","size-xxs","rounded-full","bg-primary")})}),p]})};s.__docgenInfo={description:"",methods:[],displayName:"UiRadio",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},name:{required:!0,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"string"},description:""},invertOrder:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},justify:{required:!1,tsType:{name:"EJustify"},description:"",defaultValue:{value:"EJustify.START",computed:!0}},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},checked:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""}}};const N={title:"Components/UiRadio",component:s,argTypes:{justify:{control:{type:"select"},options:Object.values(a),description:"The Element justify"},invertOrder:{control:{type:"boolean"},description:"The Element order"},disabled:{control:{type:"boolean"},description:"The Element disabled state"},children:{control:{type:"text"}}},args:{children:"Some text",onChange:e=>console.log(`Value updated to ${e}`),justify:a.START,invertOrder:!1,disabled:!1}},i={render:e=>{const[t,n]=x.useState("value_3"),o=d=>{n(d),e.onChange(d)};return r.jsxs("div",{className:"grid gap-xxs",children:[r.jsx(s,{...e,name:"radio",value:"value_1",checked:t==="value_1",onChange:o}),r.jsx(s,{...e,name:"radio",value:"value_2",checked:t==="value_2",onChange:o}),r.jsx(s,{...e,name:"radio",value:"value_3",checked:t==="value_3",onChange:o}),r.jsx(s,{...e,name:"radio",value:"value_4",checked:t==="value_4",onChange:o})]})}};var h,f,g;i.parameters={...i.parameters,docs:{...(h=i.parameters)==null?void 0:h.docs,source:{originalSource:`{
  render: args => {
    const [selectedValue, setSelectedValue] = React.useState<string>("value_3");
    const handleChange = (value: string) => {
      setSelectedValue(value);
      args.onChange(value);
    };
    return <div className="grid gap-xxs">
                <UiRadio {...args} name="radio" value="value_1" checked={selectedValue === "value_1"} onChange={handleChange} />
                <UiRadio {...args} name="radio" value="value_2" checked={selectedValue === "value_2"} onChange={handleChange} />
                <UiRadio {...args} name="radio" value="value_3" checked={selectedValue === "value_3"} onChange={handleChange} />
                <UiRadio {...args} name="radio" value="value_4" checked={selectedValue === "value_4"} onChange={handleChange} />
            </div>;
  }
}`,...(g=(f=i.parameters)==null?void 0:f.docs)==null?void 0:g.source}}};const S=["Default"];export{i as Default,S as __namedExportsOrder,N as default};
